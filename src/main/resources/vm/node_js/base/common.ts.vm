## Context:
##   LinkedHashMap project
##   Integer index
#set($dollar="$")

## for instance: http://www.mydomain.com:8080 or http://www.mydomain.com
## protocol = http:
#set($serverProtocol=$project.envJtee.baseUrl.substring(0,$project.envJtee.baseUrl.indexOf("//")))
#set($htmlProtocol=$project.envHtml.baseUrl.substring(0,$project.envHtml.baseUrl.indexOf("//")))
## address = www.mydomain.com:8080 or www.mydomain.com
#set($serverAddress=$project.envJtee.baseUrl.substring($project.envJtee.baseUrl.indexOf("//")).substring(2))
#set($htmlAddress=$project.envHtml.baseUrl.substring($project.envHtml.baseUrl.indexOf("//")).substring(2))
## host = www.mydomain.com
#if($serverAddress.indexOf(":")>-1)
    #set($serverHost=$serverAddress.substring(0, $serverAddress.indexOf(":")))
#else
    #set($serverHost=$serverAddress)
#end

#if($htmlAddress.indexOf(":")>-1)
    #set($htmlHost=$htmlAddress.substring(0, $htmlAddress.indexOf(":")))
#else
    #set($htmlHost=$htmlAddress)
#end
## port = 8080 or blank
#if($serverAddress.indexOf(":")>-1)
    #set($serverPort=$serverAddress.substring($serverAddress.indexOf(":")).substring(1))
#else
    #set($serverPort="80")
#end

#if($htmlAddress.indexOf(":")>-1)
    #set($htmlPort=$htmlAddress.substring($htmlAddress.indexOf(":")).substring(1))
#else
    #set($htmlPort="80")
#end

const SERVER_PROTOCOL = '$serverProtocol';
const SERVER_HOST = '$serverHost';
const SERVER_PORT = $serverPort;
const SERVER_APP = '$project.envJtee.app';

const HTML_PROTOCOL = '$htmlProtocol';
const HTML_HOST = '$htmlHost';
const HTML_PORT = $htmlPort;

const HTML_BASE_URL = '$project.envHtml.baseUrl';

class ServerError extends Error {
    constructor(public statusCode: number) {
        super(`HTTP Status: ${dollar}{statusCode}`);
        Object.setPrototypeOf(this, ServerError.prototype);
    }
}

function parameters(dict: any): string {
    const result = Object.keys(dict)
        .filter(value => dict[value] !== undefined)
        .map(value => `${dollar}{value}=${dollar}{dict[value]}`).join('&');
    return Object.keys(dict).filter(v => dict[v] !== undefined).length > 0 ? `?${dollar}{result}` : '';
}

export {
    SERVER_PROTOCOL,
    SERVER_HOST,
    SERVER_PORT,
    SERVER_APP,
    HTML_PROTOCOL,
    HTML_HOST,
    HTML_PORT,
    HTML_BASE_URL,
    ServerError,
    parameters
}